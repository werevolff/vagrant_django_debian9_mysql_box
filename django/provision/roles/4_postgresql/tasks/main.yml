---

# Обновим список пакетов
- name: Postgresql | apt-get update
  become: true
  apt:
    update_cache: yes
    cache_valid_time: 60

# Установим psycopg2
- name: Postgresql | install psycopg2
  become: true
  apt:
    pkg: '{{ item }}'
    state: present
  with_items:
    - python3-psycopg2

# Определение директории с кластером
- name: Postgresql | Stat cluster's folder
  stat:
    path: '/etc/postgresql/{{ PG_VERSION }}/main/'
  register: p
  become: true

# Удалим базу данных проекта
- name: Postgresql | Drop PostgreSQL db
  postgresql_db:
    name: '{{ POSTGRES_DB }}'
    state: 'absent'
  become: true
  become_user: 'postgres'
  vars:
    ansible_ssh_pipelining: true
  when: DROP_DATABASE|default(true)|bool == true and p.stat.exists

# Создадим кластер, если он ещё не создан
- name: Postgresql | Create cluster
  shell: 'pg_createcluster {{ PG_VERSION }} main --start'
  when: not p.stat.exists
  become: true
  become_user: 'postgres'

# Создадим базу для проекта
- name: PostgreSQL | Create PostgreSQL db
  postgresql_db:
    name: '{{ POSTGRES_DB }}'
    login_user: 'postgres'
    encoding: 'UTF-8'
    lc_collate: 'ru_RU.UTF-8'
    lc_ctype: 'ru_RU.UTF-8'
  become: true
  become_user: 'postgres'
  vars:
    ansible_ssh_pipelining: true

# Создадим пользователя для базы
- name: PostgreSQL | Create PostgreSQL user
  postgresql_user:
    db: '{{ POSTGRES_DB }}'
    login_user: 'postgres'
    name: '{{ POSTGRES_USER }}'
    password: '{{ POSTGRES_PASSWORD }}'
    role_attr_flags: SUPERUSER
  become: true
  become_user: 'postgres'
  vars:
    ansible_ssh_pipelining: true

# Перезапустим postgresql
- name: Postgresql | Restart service
  systemd:
    name: 'postgresql'
    state: restarted
    enabled: yes
    daemon_reload: yes
  become: true
